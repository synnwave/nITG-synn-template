<ActorFrame
	InitCommand = "%function(self)
        ROOT = GAMESTATE:GetCurrentSong():GetSongDir()
        outputFolder = ROOT .. 'DO_NOT_MODIFY-output/'
		loadfile(outputFolder .. 'template/__xml-init')()(self)

		--> now that initMain has been called, we can use string requires without having to concatenate the root path
		synn_env()
		foreground = self
        synn_env.definedGlobals = require('globals')
		synn_env.declareActors = require('functions/declareActors')
    end"
>
	<children>
		<!-- Load the template onto an actor -->
		<Layer InitCommand = "%synn_env(function(self)
			local template = require('init')
			template:Init(self, function()
				--> this function will run once the template is ready. it will require the user's scripts
				if template.Globals.DECLARATIVE_LAYOUT_ENABLED and mainScriptDidNotReturn then 
					template.Functions.backToSongWheel('main.lua\u did not return a value.')
					return
				end

				local mainScript = require('../src/main')
				if type(mainScript) == 'table' and mainScript.init then
					mainScript.init()
				elseif type(mainScript) == 'function' then
					mainScript()
				end
			end)
        end)"/>

		<!-- Load the User's actors -->
		<Layer File = "../src/layout.xml"
			Condition = "synn_env(function(self)
				--> code below only runs if declarative layout is enabled !!
				if definedGlobals.DECLARATIVE_LAYOUT_ENABLED then 
					local mainScript = require(outputFolder .. '/src/main')
					if not mainScript then 
						synn_env.mainScriptDidNotReturn = true  
						return false
					end
			
					if type(mainScript) == 'table' and mainScript.initActors then
						mainScript.initActors(self)
					end

					declareActors.__init()
				end
	
				return true
			end)()" 
		/>

	</children>
</ActorFrame>
